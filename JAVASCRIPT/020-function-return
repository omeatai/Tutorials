-------------------------
FUNCTION RETURN
-------------------------
We can pass values into a function with arguments. You can use a return statement to send a value back out of a function.

Example

function plusThree(num) {
  return num + 3;
}
var answer = plusThree(5);
answer has the value 8.

plusThree takes an argument for num and returns a value equal to num + 3.

A function can include the return statement but it does not have to. In the case that the function doesn't have a return statement, when you call it, the function processes the inner code but the returned value is undefined.

Example

let sum = 0;
function addSum(num) {
  sum = sum + num;
}
addSum(3);

addSum is a function without a return statement. The function will change the global sum variable but the returned value of the function is undefined.

we can take the return value of a function and assign it to a variable.

Assume we have pre-defined a function sum which adds two numbers together, then:

ourSum = sum(5, 12);
will call sum function, which returns a value of 17 and assigns it to ourSum variable.

-------------------------
Question:
-------------------------
#1
Create a function timesFive that accepts one argument, multiplies it by 5, and returns the new value.

#2
Create a function addFive without any arguments. This function adds 5 to the sum variable, but its returned value is undefined.

#3
Call a 'processArg' function (which adds 3 to a num, and divides the result by 5) with an argument of 7, and assign its return value to the variable 'processed'.

-------------------------
Solution:
-------------------------
#1
function timesFive(num){
  return num*5;
}

#2
let sum = 0;
function addFive() {
  sum = sum + 5;
}
let result = addFive()
console.log(result);

#3
let processed = 0;
function processArg(num) {
  return (num + 3) / 5;
}
let processed = processArg(7);
