-------------------------
GLOBAL VS LOCAL SCOPE
-------------------------
In JavaScript, scope refers to the visibility of variables. Variables which are defined outside of a function block have Global scope. This means, they can be seen everywhere in your JavaScript code.

Variables which are declared without the let keyword are automatically created in the global scope. This can create unintended consequences elsewhere in your code or when running a function again. You should always declare your variables with let.

let myGlobal = 10;
let myLocal = 20;

function myfunc() {
  myGlobal = 5;
  let myLocal = 10;
  console.log("myGlobal inside is: " + myGlobal);
  console.log("myLocal inside is: " + myLocal);
}
myfunc();
console.log("myGlobal outside is: " + myGlobal);
console.log("myLocal outside is: " + myLocal);

Variables which are declared within a function, as well as the function parameters, have local scope. That means they are only visible within that function.

Here is a function myTest with a local variable called loc.

function myTest() {
  let loc = "foo";
  console.log(loc);
}
myTest();
console.log(loc);

The myTest() function call will display the string foo in the console. The console.log(loc) line will throw an error, as loc is not defined outside of the function.



